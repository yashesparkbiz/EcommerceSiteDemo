// <auto-generated />
using System;
using EcommerceSiteDemo.Data.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EcommerceSiteDemo.Data.Migrations
{
    [DbContext(typeof(EcommerceSiteContext))]
    [Migration("20220603075605_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EcommerceSiteDemo.Data.Data.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address_Type")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("address_type");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("city");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("country");

                    b.Property<string>("House")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("house");

                    b.Property<string>("Pincode")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("pincode");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("street");

                    b.HasKey("Id");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("EcommerceSiteDemo.Data.Data.Discount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<bool>("Is_Active")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<int>("Product_Id")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("type");

                    b.Property<DateTime>("Updated_At")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("value");

                    b.HasKey("Id");

                    b.HasIndex("Product_Id");

                    b.ToTable("Discount");
                });

            modelBuilder.Entity("EcommerceSiteDemo.Data.Data.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<decimal>("Total_Amount")
                        .HasColumnType("decimal(6,2)")
                        .HasColumnName("total_amount");

                    b.Property<decimal>("Total_Discount")
                        .HasColumnType("decimal(6,2)")
                        .HasColumnName("total_discount");

                    b.Property<DateTime>("Updated_At")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<int>("User_Id")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("User_Id");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("EcommerceSiteDemo.Data.Data.Order_Details", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<int>("Delivery_Address_Id")
                        .HasColumnType("int")
                        .HasColumnName("delivery_address_id");

                    b.Property<int>("Discount_Id")
                        .HasColumnType("int")
                        .HasColumnName("discount_id");

                    b.Property<int>("Order_Id")
                        .HasColumnType("int")
                        .HasColumnName("order_id");

                    b.Property<int>("Product_Id")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("status");

                    b.Property<DateTime>("Updated_At")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("Discount_Id");

                    b.HasIndex("Product_Id");

                    b.ToTable("Order_Details");
                });

            modelBuilder.Entity("EcommerceSiteDemo.Data.Data.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("brand");

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("description");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("image");

                    b.Property<bool>("Is_Active")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(6,2)")
                        .HasColumnName("price");

                    b.Property<string>("Product_Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("product_name");

                    b.Property<int>("Product_Subcategory_Id")
                        .HasColumnType("int")
                        .HasColumnName("product_subcategory_id");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<DateTime>("Updated_At")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("EcommerceSiteDemo.Data.Data.Product_cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<bool>("Is_Active")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(6,2)")
                        .HasColumnName("price");

                    b.Property<int>("Product_Id")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<DateTime>("Updated_At")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<int>("User_Id")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("User_Id");

                    b.ToTable("Product_cart");
                });

            modelBuilder.Entity("EcommerceSiteDemo.Data.Data.Product_category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<bool>("Is_Active")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.Property<DateTime>("Updated_At")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("Product_category");
                });

            modelBuilder.Entity("EcommerceSiteDemo.Data.Data.Product_subcategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Category_Id")
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.Property<DateTime>("Updated_At")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("Category_Id");

                    b.ToTable("Product_subcategory");
                });

            modelBuilder.Entity("EcommerceSiteDemo.Data.Data.Product_wishlist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<int>("Product_Id")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<DateTime>("Updated_At")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<int>("User_Id")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("Product_Id");

                    b.HasIndex("User_Id");

                    b.ToTable("Product_wishlist");
                });

            modelBuilder.Entity("EcommerceSiteDemo.Data.Data.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Address_Id")
                        .HasColumnType("int")
                        .HasColumnName("address_id");

                    b.Property<int>("Age")
                        .HasColumnType("int")
                        .HasColumnName("age");

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<string>("Email_Id")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("email_id");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasColumnName("gender");

                    b.Property<string>("Phoneno")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasColumnName("phoneno");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("role");

                    b.Property<DateTime>("Updated_At")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<string>("User_Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("user_name");

                    b.HasKey("Id");

                    b.HasIndex("Address_Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("EcommerceSiteDemo.Data.Data.Discount", b =>
                {
                    b.HasOne("EcommerceSiteDemo.Data.Data.Product", "Product")
                        .WithMany()
                        .HasForeignKey("Product_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("EcommerceSiteDemo.Data.Data.Order", b =>
                {
                    b.HasOne("EcommerceSiteDemo.Data.Data.User", "User")
                        .WithMany()
                        .HasForeignKey("User_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("EcommerceSiteDemo.Data.Data.Order_Details", b =>
                {
                    b.HasOne("EcommerceSiteDemo.Data.Data.Discount", "Discount")
                        .WithMany()
                        .HasForeignKey("Discount_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EcommerceSiteDemo.Data.Data.Product", "Product")
                        .WithMany()
                        .HasForeignKey("Product_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Discount");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("EcommerceSiteDemo.Data.Data.Product_cart", b =>
                {
                    b.HasOne("EcommerceSiteDemo.Data.Data.User", "User")
                        .WithMany()
                        .HasForeignKey("User_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("EcommerceSiteDemo.Data.Data.Product_subcategory", b =>
                {
                    b.HasOne("EcommerceSiteDemo.Data.Data.Product_category", "Product_category")
                        .WithMany()
                        .HasForeignKey("Category_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product_category");
                });

            modelBuilder.Entity("EcommerceSiteDemo.Data.Data.Product_wishlist", b =>
                {
                    b.HasOne("EcommerceSiteDemo.Data.Data.Product", "Product")
                        .WithMany()
                        .HasForeignKey("Product_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EcommerceSiteDemo.Data.Data.User", "User")
                        .WithMany()
                        .HasForeignKey("User_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EcommerceSiteDemo.Data.Data.User", b =>
                {
                    b.HasOne("EcommerceSiteDemo.Data.Data.Address", "Address")
                        .WithMany()
                        .HasForeignKey("Address_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");
                });
#pragma warning restore 612, 618
        }
    }
}
